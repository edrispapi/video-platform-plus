version: '3.8'

services:
  web:
    build:
      context: ./backend # پوشه روت پروژه Django شما
      dockerfile: Dockerfile # Dockerfile اصلی برای اپ Django
    command: gunicorn video_platform.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend:/app # مپ کردن کد پروژه
      - media_data:/app/media # برای ذخیره ویدئوهای آپلودی
      - static_data:/app/static # برای فایل‌های استاتیک
    expose:
      - "8000"
    env_file:
      - .env # فایل متغیرهای محیطی
    depends_on:
      - db
      - redis
      - rabbitmq

  nginx:
    build:
      context: ./docker/nginx # پوشه nginx برای کانفیگ
      dockerfile: Dockerfile
    ports:
      - "80:80" # پورت HTTP عمومی
      # - "443:443" # اگر HTTPS دارید
    volumes:
      - static_data:/app/static # مپ کردن فایل‌های استاتیک
      - media_data:/app/media # مپ کردن فایل‌های media
    depends_on:
      - web

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672" # برای ارتباط Celery
      - "15672:15672" # برای مدیریت RabbitMQ (web UI)

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A core.celery_app worker -l info
    volumes:
      - ./backend:/app
      - media_data:/app/media
    env_file:
      - .env
    depends_on:
      - web
      - redis
      - rabbitmq

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0 # یا opensearch:latest
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # برای سادگی در توسعه
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data

volumes:
  media_data:
  static_data:
  postgres_data:
  es_data:
